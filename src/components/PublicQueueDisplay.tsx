import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { useSupabaseQueue } from '@/hooks/useSupabaseQueue';
import { useSupabaseSettings } from '@/hooks/useSupabaseSettings';
import { attractions } from '@/data/attractions';
import { Clock, Users, Timer } from 'lucide-react';
export const PublicQueueDisplay = () => {
  const {
    queueSummary,
    isLoading
  } = useSupabaseQueue();
  const {
    getDuration
  } = useSupabaseSettings();
  const getStatusColor = (waitTime: number) => {
    if (waitTime === 0) return 'text-green-600 bg-green-50';
    if (waitTime <= 15) return 'text-yellow-600 bg-yellow-50';
    if (waitTime <= 30) return 'text-orange-600 bg-orange-50';
    return 'text-red-600 bg-red-50';
  };
  const getStatusText = (waitTime: number) => {
    if (waitTime === 0) return '–°–≤–æ–±–æ–¥–Ω–æ';
    if (waitTime <= 15) return '–ú–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏';
    if (waitTime <= 30) return '–°—Ä–µ–¥–Ω—è—è –æ—á–µ—Ä–µ–¥—å';
    return '–ë–æ–ª—å—à–∞—è –æ—á–µ—Ä–µ–¥—å';
  };
  const getRecommendation = (waitTime: number) => {
    if (waitTime === 0) return 'üéØ –ò–¥–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è!';
    if (waitTime <= 15) return 'üëç –•–æ—Ä–æ—à–µ–µ –≤—Ä–µ–º—è';
    if (waitTime <= 30) return '‚è∞ –ü–æ–¥–æ–∂–¥–∞—Ç—å —Å—Ç–æ–∏—Ç';
    return '‚ùå –î–æ–ª–≥–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ';
  };
  if (isLoading) {
    return <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-pink-500 flex items-center justify-center">
        <div className="text-white text-xl">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>;
  }
  return <div className="min-h-screen bg-gradient-to-br from-blue-600 via-purple-600 to-pink-500 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="text-center mb-8">
          <h1 className="text-5xl font-bold text-white mb-4 drop-shadow-lg">
            üé¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω–∞–º
          </h1>
          <p className="text-xl text-white/90 drop-shadow">–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –æ–∂–∏–¥–∞–Ω–∏—è!</p>
          <div className="text-lg text-white/80 mt-2">
            –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date().toLocaleTimeString('ru-RU', {
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
          })}
          </div>
        </div>

        <Card className="bg-white/95 backdrop-blur-sm shadow-2xl">
          <CardHeader className="pb-4">
            <CardTitle className="text-2xl text-center text-gray-800">
              üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–µ–π
            </CardTitle>
          </CardHeader>
          
          <CardContent>
            <Table>
              <TableHeader>
                <TableRow className="border-b-2">
                  <TableHead className="text-center font-bold text-gray-700">–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è</TableHead>
                  <TableHead className="text-center font-bold text-gray-700">
                    <div className="flex items-center justify-center gap-2">
                      <Users className="w-4 h-4" />
                      –í –æ—á–µ—Ä–µ–¥–∏
                    </div>
                  </TableHead>
                  <TableHead className="text-center font-bold text-gray-700">
                    <div className="flex items-center justify-center gap-2">
                      <Clock className="w-4 h-4" />
                      –û–∂–∏–¥–∞–Ω–∏–µ
                    </div>
                  </TableHead>
                  <TableHead className="text-center font-bold text-gray-700">
                    <div className="flex items-center justify-center gap-2">
                      <Timer className="w-4 h-4" />
                      –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                    </div>
                  </TableHead>
                  <TableHead className="text-center font-bold text-gray-700">–°—Ç–∞—Ç—É—Å</TableHead>
                  <TableHead className="text-center font-bold text-gray-700">–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–¥–∞</TableHead>
                  <TableHead className="text-center font-bold text-gray-700">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</TableHead>
                </TableRow>
              </TableHeader>
              
              <TableBody>
                {queueSummary.filter(summary => {
                const attraction = attractions.find(a => a.id === summary.attractionId);
                return attraction && attraction.isActive;
              }).sort((a, b) => a.estimatedWaitTime - b.estimatedWaitTime).map(summary => {
                const attraction = attractions.find(a => a.id === summary.attractionId);
                if (!attraction) return null;

                // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                const currentDuration = getDuration(attraction.id);
                const nextAvailableTime = new Date(Date.now() + summary.estimatedWaitTime * 60000);
                return <TableRow key={summary.attractionId} className="hover:bg-gray-50 transition-colors">
                        <TableCell className="text-center">
                          <div className="flex items-center gap-3 justify-center">
                            <span className="text-2xl">{attraction.icon}</span>
                            <div>
                              <div className="font-semibold text-gray-800">{attraction.name}</div>
                              <div className="text-sm text-gray-500">{attraction.description}</div>
                            </div>
                          </div>
                        </TableCell>
                        
                        <TableCell className="text-center">
                          <span className="font-bold text-xl text-blue-600">
                            {summary.queueLength} —á–µ–ª.
                          </span>
                        </TableCell>
                        
                        <TableCell className="text-center">
                          <span className="font-bold text-xl text-orange-600">
                            {summary.estimatedWaitTime === 0 ? '–°–µ–π—á–∞—Å' : `${summary.estimatedWaitTime} –º–∏–Ω`}
                          </span>
                        </TableCell>
                        
                        <TableCell className="text-center">
                          <span className="font-semibold text-gray-600">
                            {currentDuration} –º–∏–Ω
                          </span>
                        </TableCell>
                        
                        <TableCell className="text-center">
                          <span className={`${getStatusColor(summary.estimatedWaitTime)} px-3 py-1 rounded-full text-sm font-bold`}>
                            {getStatusText(summary.estimatedWaitTime)}
                          </span>
                        </TableCell>
                        
                        <TableCell className="text-center">
                          {summary.estimatedWaitTime > 0 ? <div className="text-center">
                              <div className="font-bold text-blue-700">
                                {nextAvailableTime.toLocaleTimeString('ru-RU', {
                          hour: '2-digit',
                          minute: '2-digit'
                        })}
                              </div>
                              <div className="text-xs text-gray-500">
                                –µ—Å–ª–∏ –∫—É–ø–∏—Ç—å —Å–µ–π—á–∞—Å
                              </div>
                            </div> : <div className="text-center">
                              <div className="font-bold text-green-700">
                                ‚úÖ –°—Ä–∞–∑—É
                              </div>
                              <div className="text-xs text-green-600">
                                –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å
                              </div>
                            </div>}
                        </TableCell>
                        
                        <TableCell className="text-center">
                          <span className="font-bold text-purple-600">
                            {getRecommendation(summary.estimatedWaitTime)}
                          </span>
                        </TableCell>
                      </TableRow>;
              })}
              </TableBody>
            </Table>
          </CardContent>
        </Card>

        {/* –°–æ–≤–µ—Ç –∏ –ª–µ–≥–µ–Ω–¥–∞ */}
        <div className="mt-8 space-y-4">
          <Card className="bg-white/90 backdrop-blur-sm">
            <CardContent className="p-6 text-center">
              <h3 className="text-xl font-bold text-gray-800 mb-3">üí° –°–æ–≤–µ—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º</h3>
              <p className="text-gray-700 text-lg">–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è - —Å–≤–µ—Ä—Ö—É —Å–∞–º—ã–µ —Å–≤–æ–±–æ–¥–Ω—ã–µ!</p>
            </CardContent>
          </Card>

          <Card className="bg-white/90 backdrop-blur-sm">
            <CardContent className="p-4">
              <div className="flex flex-wrap justify-center gap-6 text-sm">
                <div className="flex items-center">
                  <div className="w-4 h-4 bg-green-500 rounded-full mr-2"></div>
                  <span>–°–≤–æ–±–æ–¥–Ω–æ (0 –º–∏–Ω)</span>
                </div>
                <div className="flex items-center">
                  <div className="w-4 h-4 bg-yellow-500 rounded-full mr-2"></div>
                  <span>–ú–∞–ª–æ –æ—á–µ—Ä–µ–¥–∏ (–¥–æ 15 –º–∏–Ω)</span>
                </div>
                <div className="flex items-center">
                  <div className="w-4 h-4 bg-orange-500 rounded-full mr-2"></div>
                  <span>–°—Ä–µ–¥–Ω—è—è –æ—á–µ—Ä–µ–¥—å (15-30 –º–∏–Ω)</span>
                </div>
                <div className="flex items-center">
                  <div className="w-4 h-4 bg-red-500 rounded-full mr-2"></div>
                  <span>–ë–æ–ª—å—à–∞—è –æ—á–µ—Ä–µ–¥—å (30+ –º–∏–Ω)</span>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>;
};