
import { useEffect } from 'react';
import { useQueueStore } from '@/stores/queueStore';
import { useAttractionSettingsStore } from '@/stores/attractionSettingsStore';

export const useRealtimeSync = () => {
  const queueStore = useQueueStore();
  const settingsStore = useAttractionSettingsStore();

  useEffect(() => {
    const handleServerQueueSync = (event: CustomEvent) => {
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—á–µ—Ä–µ–¥–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞');
      const queueData = event.detail;
      if (queueData && Array.isArray(queueData)) {
        queueStore.setQueueFromServer(queueData);
      }
    };

    const handleServerSettingsSync = (event: CustomEvent) => {
      console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞');
      const settingsData = event.detail;
      if (settingsData && Array.isArray(settingsData)) {
        settingsStore.setSettingsFromServer(settingsData);
        // –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –æ—á–µ—Ä–µ–¥–∏
        queueStore.updateQueueSummary();
      }
    };

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    window.addEventListener('server-queue-sync', handleServerQueueSync as EventListener);
    window.addEventListener('server-settings-sync', handleServerSettingsSync as EventListener);

    return () => {
      window.removeEventListener('server-queue-sync', handleServerQueueSync as EventListener);
      window.removeEventListener('server-settings-sync', handleServerSettingsSync as EventListener);
    };
  }, [queueStore, settingsStore]);

  return {
    forceSync: () => {
      console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
      // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
      window.dispatchEvent(new CustomEvent('request-server-sync'));
    }
  };
};
